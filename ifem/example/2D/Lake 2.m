function [node,elem,u] = Lake
% Lake solves Poisson equation in a Lake shape domain with AFEM.
% For large number of unknowns, comment out the graphic output "showmesh".
% The initial mesh is generated by Mesh2d. 
%--------------------------------------------------------------------------
% Long Chen
%--------------------------------------------------------------------------

clear all; close all;
figure(1); set(gcf,'Units','normal'); set(gcf,'Position',[0,0,0.9,0.45]);
%---------------------- Parameters ----------------------------------------
theta=0.5; maxN=6e2; maxIt = 20; N = zeros(maxIt,1);
%---------------------- Load initial mesh----------------------------------
node = zeros(1,1); elem = zeros(3,1); % to eliminate the warning note
load lakemesh
subplot(1,3,1); showmesh(node,elem); pause(0.05)
%---------------------- Adaptive Finite Element Method --------------------          
for k = 1:maxIt
    %------------------- Step 1: Solve ------------------------------------
    u = Poisson(node,elem,[],@f,@g_D,[]);     % use direct solver
%    u = PoissonMG(node,elem,[],@f,@g_D,[]); % use Multigrid solver
    %------------------- Plot mesh and solution ---------------------------
    subplot(1,3,3); showsolution(node,elem,u,[-44,12]);pause(0.05);
    subplot(1,3,2); showsolution(node,elem,u,[0,90]);axis equal; colorbar;
    %------------------- Step 2: Estimate ---------------------------------
%    eta = estimateW21(node,elem,u);            % recovery type
    eta = estimateresidual(node,elem,u,@f);    % residual type
    %------------------- Step 3: Mark -------------------------------------    
    markedElem = mark(elem,eta,theta);
    %------------------- Step 4.1: Refine ---------------------------------
    [node,elem] = bisect(node,elem,markedElem);
    subplot(1,3,1); showmesh(node,elem); pause(0.05)
    %----------------------------------------------------------------------
    N(k) = size(node,1);
    if (N(k)>maxN), break; end        
end
end
%---------------------- End of function LAKE ----------------------------

%---------------------- Sub functions called by LSHAPE --------------------
function z = f(p) % load data (right hand side function)
z = ones(size(p,1),1);
end
%--------------------------------------------------------------------------
function z = g_D(p) % Dirichlet boundary condition
z = zeros(size(p,1),1);
end
%--------------------------------------------------------------------------